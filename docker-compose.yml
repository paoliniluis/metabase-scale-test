services:
  lotsa_dashboards:
    build: lotsa/dashboards/.
    hostname: lotsa_dashboards
    container_name: lotsa_dashboards
    networks:
      - metanet1-postgres
    environment:
      host: http://metabase:3000
      user: a@b.com
      password: metabot1
      times: 10000
    depends_on:
      setup-postgres:
        condition: service_completed_successfully
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 64M
        reservations:
          cpus: '0.5'
          memory: 32M
  metabase-postgres:
    image: metabase/metabase-enterprise:v1.46.6.4
    container_name: metabase-postgres
    hostname: metabase
    volumes: 
      - /dev/urandom:/dev/random:ro
    ports:
      - 3000:3000
    environment: 
      MB_DB_TYPE: postgres
      MB_DB_CONNECTION_URI: "postgres://postgres-app-db:5432/metabase?user=metabase&password=mysecretpassword&sslmode=prefer"
      MB_SITE_URL: http://localhost:3000/
      MB_EMAIL_SMTP_HOST: maildev-sub
      MB_EMAIL_SMTP_PASSWORD: password
      MB_EMAIL_SMTP_PORT: 25
      MB_EMAIL_SMTP_SECURITY: none
      MB_EMAIL_SMTP_USERNAME: admin
      MB_SEND_EMAIL_ON_FIRST_LOGIN_FROM_NEW_DEVICE: FALSE
      JAVA_TOOL_OPTIONS: -Xmx1488m -Xms500m
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 3072M
        reservations:
          cpus: '4'
          memory: 1536M
    networks: 
      - metanet1-postgres
    depends_on: 
      postgres-app-db:
        condition: service_healthy
      postgres-data1:
        condition: service_healthy
    healthcheck:
      test: curl --fail -X GET -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 10
  postgres-app-db:
    image: postgres:15.2-alpine
    container_name: postgres-app-db
    hostname: postgres-app-db
    ports:
      - 5432:5432
    environment:
      - "POSTGRES_USER=metabase"
      - "POSTGRES_DB=metabase"
      - "POSTGRES_PASSWORD=mysecretpassword"
    networks: 
      - metanet1-postgres
    cpus: 1
    mem_limit: 128m
    command: -c log_statement=all
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U metabase -d metabase"]
      interval: 10s
      timeout: 5s
      retries: 5
  setup-postgres:
    image: bash:5.2.15
    container_name: setup-postgres
    volumes:
      - $PWD/setup:/tmp
    networks:
      - metanet1-postgres
    depends_on:
      metabase-postgres:
        condition: service_healthy
    command: sh /tmp/metabase-setup.sh metabase:3000
    cpus: 1
    mem_limit: 128m
  postgres-data1:
    image:  metabase/qa-databases:postgres-sample-15
    container_name: postgres-data1
    hostname: postgres-data1
    networks: 
      - metanet1-postgres
    ports:
      - 5433:5432
    cpus: 4
    mem_limit: 8192mb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U metabase -d sample"]
      interval: 10s
      timeout: 5s
      retries: 5
  maildev-sub-postgres:
    image: maildev/maildev:1.1.0
    container_name: maildev-sub-postgres
    hostname: maildev-sub
    ports:
    - "3003:80"
    networks:
    - metanet1-postgres
    cpus: 1
    mem_limit: 128m

networks: 
  metanet1-postgres:
    driver: bridge